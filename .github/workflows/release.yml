# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# Workflow syntax reference:
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: Release Package

on:
  # Pull Request - Only when testing workflow
  # pull_request:
  #   branches: [ main ]
  release:
    types: [published]

  # workflow_dispatch:
env:
  APP_PACKAGE_NAME: '@pwrdrvr/microapps-app-release'

jobs:
  build-app:
    if: startsWith( github.ref, 'refs/tags/v')
    uses: ./.github/workflows/r_build-app.yml
    with:
      APP_NAME: ${{ env.APP_NAME }}
      APP_PACKAGE_NAME: ${{ env.APP_PACKAGE_NAME }}

  build-cdk-construct:
    name: Build CDK Construct
    needs: [ build-app ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      prSuffix: ${{ steps.prSuffix.outputs.prSuffix }}
      packageVersion: ${{ steps.packageVersion.outputs.packageVersion }}
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Set git identity
        run: |-
          git config user.name "Automation"
          git config user.email "github-actions@github.com"

      # - name: Bump Version by Patch - Push Tag to GH - Apply to Package.json
      #   run: |
      #     npm version patch
      #     git push â€”-tags

      - name: Apply Version from Git Tag
        run: |
          npm version from-git --no-git-tag-version

      - name: Extract Package Version
        run: |
          echo 'PACKAGE_VERSION='$(node -p -e "require('./package.json').version") >> $GITHUB_ENV

      - name: Apply NPM Version to Everything
        run: |
          npm version ${PACKAGE_VERSION} --no-git-tag-version --allow-same-version --workspaces

      # Fixes errors due to JSII tsconfig.json not ignoring libs
      # node_modules/flatpickr/dist/types/instance.d.ts(37,21): error TS2304: Cannot find name 'Node'.
      # Error: node_modules/flatpickr/dist/types/instance.d.ts(82,56): error TS2304: Cannot find name 'HTMLElementTagNameMap'.
      # Error: node_modules/@types/carbon-components-react/lib/components/FileUploader/FileUploaderDropContainer.d.ts(46,80): error TS2304: Cannot find name 'File'.
      # Error: node_modules/@types/overlayscrollbars/index.d.ts(348,19): error TS2304: Cannot find name 'NodeListOf'.
      # - name: Modify cdk-construct tsconfig.json
      #   run: |
      #     mv ./packages/cdk-construct/tsconfig.json ./packages/cdk-construct/tsconfig.jsii.json
      #     jq ".compilerOptions += { \"skipLibCheck\": true }" ./packages/cdk-construct/tsconfig.jsii.json > ./packages/cdk-construct/tsconfig.json

      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::"$(git ls-remote origin -h ${{
          github.ref }} | cut -f1)"

      #
      # Download the App Artifact and put it in the right place
      # Can't build this in the jsii/superchain because `npm ci`
      # gets OOM killed at 2 GB of RAM usage for some reason.
      #
      - name: Download Artifact - App
        uses: actions/download-artifact@v2
        with:
          name: app_zip
          path: packages/cdk-construct/lib/
      - name: Unzip Artifact - App
        working-directory: packages/cdk-construct/lib/
        run: unzip nextjs.zip

      #
      # Build Construct with JSII
      #

      - name: Install CDK Construct Deps
        working-directory: packages/cdk-construct/
        run: |
          npm ci

      # Copy the Nextjs build into the Construct output
      # Move static files out of the Lambda files
      - name: Move App to Right Place
        run: |
          mkdir -p packages/cdk-construct/lib/
          mv packages/app/.next packages/cdk-construct/lib/microapps-app-release/
          mv packages/cdk-construct/lib/microapps-app-release/.next/static packages/cdk-construct/lib/.static_files

      - name: Build with JSII
        working-directory: packages/cdk-construct/
        run: |
          npm run build:jsii
          npm run build:jsii-docgen
          npm run build:jsii-pacmak

      - name: Upload CDK Construct Artifact
        if: ${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2
        with:
          name: cdk-construct-dist
          path: packages/cdk-construct/dist
    container:
      image: jsii/superchain:1-buster-slim-node16

  #
  # Release Assets
  #
  release-assets:
    name: Release Assets
    needs: [ build-cdk-construct ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Download CDK Construct build artifacts
        uses: actions/download-artifact@v2
        with:
          name: cdk-construct-dist
          path: packages/cdk-construct/dist

      #
      # PyPI
      #
      # https://github.com/cdklabs/jsii-release#pypi
      - name: Release CDK Construct - PyPI
        working-directory: packages/cdk-construct/
        run: |
          npx -p npx -p publib@latest publib-pypi
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

      # Docs for GitHub Nuget
      # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-nuget-registry
      # Docs for jsii-release-nuget
      # https://github.com/cdklabs/jsii-release#nuget
      - name: Release CDK Construct - NuGet.org
        working-directory: packages/cdk-construct/
        run: |
          npx -p npx -p publib@latest publib-nuget
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_MICROAPPS }}

      # Docs for GitHub Maven
      # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry
      # Docs for jsii-release-maven
      # https://github.com/cdklabs/jsii-release#maven
      - name: Release CDK Construct - Maven Central
        working-directory: packages/cdk-construct/
        run: |
          npx -p npx -p publib@latest publib-maven
        env:
          MAVEN_ENDPOINT: https://s01.oss.sonatype.org
          MAVEN_STAGING_PROFILE_ID: 3127710ac57dbb
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PRIVATE_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          MAVEN_GPG_PRIVATE_KEY_PASSPHRASE: ${{ secrets.MAVEN_GPG_PRIVATE_KEY_PASSPHRASE }}

      # Docs for different release steps and params
      # https://www.npmjs.com/package/jsii-release
      # Docs for jsii-release-npm
      # https://github.com/cdklabs/jsii-release#npm
      - name: Release CDK Construct - npmjs.org
        working-directory: packages/cdk-construct/
        run: |
          npx -p publib@latest publib-npm
        env:
          NPM_TOKEN: ${{ secrets.NPMJSORG_PUBLISH_TOKEN }} # jsii-release requires NPM_TOKEN as an env var

    container:
      image: jsii/superchain:1-buster-slim-node16
