name: Build App

on:
  workflow_call:
    inputs:
      APP_NAME:
        required: true
        type: string
      APP_PACKAGE_NAME:
        required: true
        type: string
      APP_CONSTRUCT_FOLDER_NAME:
        required: true
        type: string
      packageVersion:
        required: true
        type: string
      prSuffix:
        required: false
        type: string
        default: ''

env:
  APP_NAME: ${{ inputs.APP_NAME }}
  APP_PACKAGE_NAME: ${{ inputs.APP_PACKAGE_NAME }}
  PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: node-modules-${{ hashFiles('package.json', 'package-lock.json', 'patches/*') }}

      - name: Optionally Install Node Modules
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache App Build Node Modules
        id: cache-node-modules-app
        uses: actions/cache@v3
        with:
          path: |
            packages/app/node_modules
          key: node-modules-${{ hashFiles('package.json', 'packages/app/package-lock.json', 'packages/app/patches/*') }}

      # Fixes errors due to JSII tsconfig.json not ignoring libs
      # node_modules/flatpickr/dist/types/instance.d.ts(37,21): error TS2304: Cannot find name 'Node'.
      # Error: node_modules/flatpickr/dist/types/instance.d.ts(82,56): error TS2304: Cannot find name 'HTMLElementTagNameMap'.
      # Error: node_modules/@types/carbon-components-react/lib/components/FileUploader/FileUploaderDropContainer.d.ts(46,80): error TS2304: Cannot find name 'File'.
      # Error: node_modules/@types/overlayscrollbars/index.d.ts(348,19): error TS2304: Cannot find name 'NodeListOf'.
      - name: Modify cdk-construct tsconfig.json
        run: |
          mv ./packages/cdk-construct/tsconfig.json ./packages/cdk-construct/tsconfig.jsii.json
          jq ".compilerOptions += { \"skipLibCheck\": true }" ./packages/cdk-construct/tsconfig.jsii.json > ./packages/cdk-construct/tsconfig.json

      - name: Build All TypeScript
        run: npm run build

      - name: Lint
        run: npm run lint

      - name: Dump info from version reusable workflow
        run: |
          echo "packageVersion: ${{ inputs.packageVersion }}"
          echo "prSuffix: ${{ inputs.prSuffix }}"
      
      - name: Apply NPM Version to Everything
        run: |
          npm version ${{ inputs.packageVersion }} \
            --no-git-tag-version --allow-same-version
          npm version ${{ inputs.packageVersion }} \
            --no-git-tag-version --allow-same-version --workspaces

      - name: Apply Next.js Version
        run: |
          npx -w ${APP_PACKAGE_NAME} microapps-publish nextjs-version -n ${{ inputs.packageVersion }}

      # outputTracing can't follow modules in npm workspaces
      # npm will not install modules in a workspace folder if there
      # is a package.json in the parent folder, so move it out of the way
      - name: Install Runtime Deps for outputTracing
        if: steps.cache-node-modules-app.outputs.cache-hit != 'true'
        working-directory: packages/app/
        run: |
          mv ../../package.json ../../package.json.hide
          npm ci --omit=dev
          mv ../../package.json.hide ../../package.json

      - name: Restore Next.js Build Cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/packages/app/.next/cache
          # Generate a new cache whenever packages or patches change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('packages/app/package-lock.json', 'patches/*') }} }}

      - name: Build Next.js App
        working-directory: packages/app/
        run: |
          npm run build

      - name: Combine Build Outputs
        run: |
          mkdir -p ./packages/cdk-construct/lib/${{ inputs.APP_CONSTRUCT_FOLDER_NAME }}
          mkdir -p ./packages/cdk-construct/lib/${{ inputs.APP_CONSTRUCT_FOLDER_NAME }}/.static_files/
          mv .packages/app/.next/static ${{ inputs.APP_CONSTRUCT_FOLDER_NAME }}/.static_files/_next
          cp -R ./packages/app/public/* ./packages/cdk-construct/lib/${{ inputs.APP_CONSTRUCT_FOLDER_NAME }}/.static_files/
          cp -R ./packages/app/.next/standalone/* ./packages/cdk-construct/lib/${{ inputs.APP_CONSTRUCT_FOLDER_NAME }}
          cp -R ./packages/app/run.sh ./packages/cdk-construct/lib/${{ inputs.APP_CONSTRUCT_FOLDER_NAME }}

      # Upload Artifact
      - name: Zip Package
        working-directory: packages/cdk-construct/lib/
        run: zip -r nextjs.zip microapps-app-${APP_NAME}
      - name: Upload Zip
        uses: actions/upload-artifact@v3
        with:
          name: app_zip
          path: packages/cdk-construct/lib/nextjs.zip
